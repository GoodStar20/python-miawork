"""
Django settings for workcomp project.

Generated by 'django-admin startproject' using Django 2.2.1.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os
import json

with open("config.json") as config:
    config = json.load(config)

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config['SECRET_KEY']

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

#ALLOWED_HOSTS = ['10.254.254.80', 'localhost','127.0.0.1','mwpyth01.miains.net']
ALLOWED_HOSTS = ['10.253.20.125', 'localhost','127.0.0.1','mwpythdev.miains.net','mwpythdev']

# Application definition

INSTALLED_APPS = [
    'risk_eval',
    'rest_framework',
    'users.apps.UsersConfig',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'bootstrap4',
    'multiselectfield',
    'schedule_rating',
    'django.contrib.humanize'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'workcomp.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'workcomp.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

#"""
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        #'NAME': 'MIAUW_V2',
        'NAME': 'MIAUW_Archive_SCHED_TEST',
        # Dev Database Connection-----
        'USER': config['DBUSER'],
        'PASSWORD': config['DBPASSWORD'],
        'HOST': '127.0.0.1',
        'PORT': '3306',
        # End Dev Database Connection--

        # PRODUCTION, ONLY USE FOR SPEED TESTS-------
        # NO DATA ENTRY
        #'USER': "JSANCHEZ",
        #'PASSWORD': "M1A.C0NN3CT",
        #'HOST': '10.254.254.254',
        #'PORT': '3307',
        # END PRODUCTION-----------------------------
        'OPTIONS': {
            'init_command': "SET sql_mode='STRICT_TRANS_TABLES'"
        }
    }
}

#PRODUCTION ENVIRONMENT:
#'HOST': '10.254.254.254',
#'PORT': '3307',
#CONFIG FILE
#"DBUSER": "JSANCHEZ",
#"DBPASSWORD": "M1A.C0NN3CT",

"""

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}
"""

# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'static')


# if users try to access a page with login requirements, take them to the login page
LOGIN_URL = '/login/'
# after login take users to listview
LOGIN_REDIRECT_URL = '/risk_eval/list/'


## DEBUG = False email settings
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_USE_TLS = True
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_HOST_USER  = config['EMAIL_HOST_USER']
EMAIL_HOST_PASSWORD = config['EMAIL_HOST_PASSWORD']
FROM_EMAIL = config['FROM_EMAIL']
#ADMINS = [('Joe Sanchez', 'jsanchez@k2ins.com'), ('Tami Beedie', 'tbeedie@mwiainsurance.com')]
ADMINS = [('Doorn Test', 'brian@doornsa.com')]

## SSL
#SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')
#SECURE_SSL_REDIRECT = True
#SESSION_COOKIE_SECURE = True
#CSRF_COOKIE_SECURE = True